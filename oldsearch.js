// https://app.hubspot.com/developer/20349128/application/334934
// be sure to change scope for watever you are tryign to accmoplish
/*
 *
 * Debit Card Spend Limits
2.       Debit Card Limits

3.       Debit Spend Limits

4.       Debit Card Spend

5.       Card Spend Limits

6.       Debit Limits

7.       Debit Spend

8.       Card Limits

Exculsions - 195 results

 * 
 * 
 * 
 */ 


require('dotenv').config()
const express = require('express')
const request = require('request-promise-native')
const axios = require('axios').default
const NodeCache = require('node-cache')
const session = require('express-session')
const opn = require('open')
const app = express()
const fs = require('fs')
var striptags = require('striptags')

const { APP_ID, CLIENT_ID, HS_BASE_URL, CLIENT_SECRET, LOCAL_URL, BASE_URL, SCOPE, PORT, AUTH_CALLBACK } = process.env
const pageIds = [
  '5640165695:0.12460391',
  '33027667523:0.10484064',
  '5682943044:0.1038366',
  '5646393125:0.07200675',
  '24262194294:0.06775536',
  '5640055475:0.04065321',
  '5638665049:0.028188197',
  '5646132285:0.02564932',
  '33135127006:0.02564932',
  '5639520901:0.01804643',
  '6048517914:0.014987236',
  '5639795757:0.010475628',
  '6018673136:0.010475628',
  '5640282573:0.00931023',
  '5646372166:0.009187808',
  '5639438210:0.009023215',
  '42859937541:0.007519346',
  '5640232247:0.0054727932',
  '5639560926:0.0045116073',
  '5640506857:0.003340098',
  '5645713917:0.0019572254',
  '5646387038:0.0015472599',
  '5832448250:0.0014588314',
  '5646132545:0.0014456953',
  '5512767226:0.0013932283',
  '5640077220:0.001373756',
  '5640077923:0.0012232978',
  '5646094925:0.00097316963',
  '5646131956:0.0008318042',
  '5645751323:0.0008232126',
  '5640107895:0.0007910507',
  '5713911708:0.00078658195',
  '5640677757:0.0005392637',
  '29121197706:0.0005344261',
  '5713858601:0.00050919707',
  '5638726815:0.00046896393',
  '5640226935:0.00046600783',
  '5640237338:0.0003603079',
  '5653538912:0.0003438088',
  '8658763994:0.00034203535',
  '8660277244:0.00034203535',
  '5640273421:0.00033837388',
  '5646369028:0.00027110268',
  '5655840265:0.00026609979',
  '5645877857:0.00026400932',
  '5640665901:0.00025765816',
  '5656323968:0.00025652652',
  '5646376288:0.00022920588',
  '6304791701:0.00022920588',
  '11569462863:0.00021176261',
  '29981037631:0.00020969319',
  '5638760001:0.00020056711',
  '5645698327:0.00018486296',
  '5645879999:0.00017926324',
  '36868828142:0.0001743183',
  '5645889945:0.0001549111',
  '6354449991:0.00014647884',
  '5640672855:0.00014585372',
  '5646109735:0.00014165966',
  '5638761511:0.00013712869',
  '5640211580:0.00013415696',
  '5638712888:0.00012950852',
  '5639957934:0.0001181244',
  '5640054645:0.00011555651',
  '26880195405:0.00011212131',
  '5645888755:0.00010574328',
  '5645892046:0.00009532925',
  '26960563463:0.00008465397',
  '5638784323:0.00007943177',
  '5640268282:0.000077037665',
  '6008436173:0.00007585043',
  '5640040780:0.00007209756',
  '5638754824:0.0000615532',
  '5640411493:0.000049971044',
  '5646366267:0.000048148548',
  '5638769480:0.000047029112',
  '36766549172:0.000044844128',
  '6009698144:0.000042125055',
  '46546666307:0.000034972447',
  '5640146836:0.0000347514',
  '5640291327:0.000033652257',
  '5639754290:0.000031322415',
  '5638700703:0.000030047639',
  '12197059940:0.000028429118',
  '25564499955:0.000025057932',
  '24865229667:0.000021335027',
  '5646361267:0.00001977256',
  '5645694853:0.000019353707',
  '5635598410:0.000018793451',
  '5640542535:0.000016998032',
  '5639475128:0.000016056205',
  '5639423851:0.000015210705',
  '5646131124:0.000014558303',
  '5640294663:0.000013790768',
  '5640407216:0.000013526186',
  '7214579957:0.000013460903',
  '5646391663:0.000012056496',
  '5638680733:0.000011712143',
  '5670360720:0.000011607062',
  '5640426865:0.000011525331',
  '5645912437:0.000011533125',
  '5670360720:0.0000115182365',
  '5646131031:0.000011334849',
  '5638760105:0.000011334849',
  '9354031999:0.00001125916',
  '5639504601:0.000011076621',
  '28357797232:0.00001087256',
  '5639439240:0.0000106557545',
  '5640035243:0.000010254778',
  '8660786314:0.000010045769',
  '5679443770:0.000009885535',
  '5638783600:0.000009453094',
  '5639893126:0.00000906788',
  '5639599117:0.000008909118',
  '5639952793:0.000008388785',
  '5638758288:0.000008102652',
  '29300180081:0.000007686569',
  '5638677421:0.000007186124',
  '5640088375:0.0000068009094',
  '5955769464:0.0000067690844',
  '5646391507:0.0000063641887',
  '5711116516:0.0000063641887',
  '7243943791:0.000005860032',
  '5638756604:0.000005455019',
  '5671177800:0.000005455019',
  '5671461820:0.000005455019',
  '7244708903:0.000005263741',
  '46386661192:0.000005263741',
  '5638710455:0.000005263741',
  '5671190726:0.000005263741',
  '5640265076:0.000005263741',
  '5773065668:0.0000051329457',
  '5639491657:0.0000050228846',
  '7244957286:0.00000453394',
  '7244961040:0.00000453394',
  '5640017976:0.00000453394',
  '6703080488:0.00000453394',
  '5714432594:0.00000453394',
  '45216144030:0.00000453394',
  '5639496392:0.00000453394',
  '5646355492:0.00000453394',
  '5653192321:0.00000453394',
  '5653744195:0.00000453394',
  '5669359612:0.00000453394',
  '5711877778:0.00000453394',
  '5640263617:0.00000453394',
  '36763176903:0.00000453394',
  '5639956927:0.000004511778',
  '39375896536:0.000004481387',
  '5711635292:0.000003886234',
  '7244960973:0.000003593062',
  '6150830744:0.000003593062',
  '6149376705:0.000003593062',
  '6150807118:0.000003593062',
  '5714475192:0.000003593062',
  '5639456447:0.000003593062',
  '5639504212:0.000003593062',
  '5639607506:0.000003593062',
  '5639653706:0.000003593062',
  '5639370766:0.000003593062',
  '5646132780:0.000003593062',
  '5671799228:0.000003593062',
  '5711212963:0.000003593062',
  '5713548422:0.000003593062',
  '29301380510:0.000003593062',
  '27058596645:0.000003593062',
  '24788515508:0.000003593062',
  '6150704082:0.0000030797676',
  '9725527578:0.0000030797676',
  '5639649762:0.0000030797676',
  '5639719538:0.0000030797676',
  '7722272368:0.00000226697',
  '5640564730:0.00000226697',
  '5640576232:0.00000226697',
  '5640669743:0.00000226697',
  '5645872871:0.00000226697',
  '5640034817:0.00000226697',
  '6150820249:0.00000226697',
  '6378031705:0.00000226697',
  '43633824256:0.00000226697',
  '5865097767:0.00000226697',
  '5645913967:0.00000226697',
  '5646132327:0.00000226697',
  '5639497680:0.00000226697',
  '5639540683:0.00000226697',
  '5638679123:0.00000226697',
  '5646391464:0.00000226697',
  '5646393094:0.00000226697',
  '5653572073:0.00000226697',
  '5653742721:0.00000226697',
  '5663424149:0.00000226697',
  '5701160409:0.00000226697',
  '5640238484:0.00000226697',
  '7244957038:0.000001943117',
  '47088011568:0.000001943117',
  '5639078322:0.000001943117',
  '5668902567:0.000001943117',
  '19258790499:0.0000016192641',
  '7246113427:0.0000012954113',
  '5638798012:0.0000012954113',
  '5640165695:0.03947162',
  '33027667523:0.033211075',
  '5682943044:0.032893013',
  '5646393125:0.02281006',
  '24262194294:0.021463318',
  '5640055475:0.0128779905',
  '5646132285:0.008125108',
  '33135127006:0.008125108',
  '5640282573:0.0044285697',
  '6048517914:0.0042910716',
  '5646372166:0.0029132653',
  '6018673136:0.002249498',
  '5640232247:0.0017240779',
  '5832448250:0.00045957128',
  '5646132545:0.0004554331',
  '5646094925:0.00030938492',
  '29121197706:0.00028992008',
  '5646131956:0.00026444276',
  '5713858601:0.00024014406',
  '5645751323:0.00023755408',
  '5640077220:0.00023608241',
  '5640226935:0.0002344587',
  '5638665049:0.00022259114',
  '6008436173:0.00021568238',
  '5640677757:0.00017143985',
  '36868828142:0.0001703772',
  '5638726815:0.00014909054',
  '5640107895:0.000143297',
  '5645877857:0.00013250805',
  '5640237338:0.00011759563',
  '5639957934:0.00011545377',
  '26880195405:0.00010958641',
  '6009698144:0.00010881813',
  '5639795757:0.00010832415',
  '5640273421:0.00010757404',
  '5646369028:0.000090558206',
  '5645879999:0.00008832209',
  '5645698327:0.00008822877',
  '26960563463:0.00008274007',
  '5640665901:0.00008191332',
  '5640672855:0.000078591744',
  '5638784323:0.00007763592',
  '29981037631:0.000070172384',
  '5638754824:0.000060161565',
  '11569462863:0.000055958106',
  '5645889945:0.00004924852',
  '5646109735:0.000047722904',
  '5640211580:0.00004265047',
  '5638712888:0.000041172665',
  '6354449991:0.000040679348',
  '5640054645:0.000036737114',
  '5640146836:0.000033965716',
  '5645888755:0.000033617343',
  '5639754290:0.00003061426',
  '5645892046:0.000030306572',
  '12197059940:0.00002778638',
  '5640268282:0.000024491408',
  '25564499955:0.000024491408',
  '5646376288:0.000019966794',
  '5640040780:0.0000196032',
  '5639497680:0.000019486224',
  '5635598410:0.000018368557',
  '5638769480:0.000015627451',
  '5646366267:0.00001530713',
  '29300180081:0.00001179849',
  '5645913967:0.0000111349855',
  '7214579957:0.0000111349855',
  '9354031999:0.000010714991',
  '28357797232:0.000010588992',
  '5512767226:0.0000075782455',
  '5656323968:0.0000069593652',
  '5670360720:0.0000055674927',
  '25241510404:0.0000041756193',
  '5640165695:0.13310246',
  '33027667523:0.11199126',
  '5682943044:0.11091873',
  '5646393125:0.07691794',
  '24262194294:0.07237658',
  '5640055475:0.043425947',
  '5638665049:0.029631997',
  '5646132285:0.027398722',
  '33135127006:0.027398722',
  '5639520901:0.018970769',
  '6048517914:0.015754882',
  '6018673136:0.01101219',
  '5639795757:0.01101219',
  '5646372166:0.009634884',
  '5639438210:0.009485384',
  '42859937541:0.007904487',
  '5640232247:0.005746794',
  '5640282573:0.004951749',
  '5639560926:0.004742692',
  '5640506857:0.0034563937',
  '5645713917:0.002072607',
  '5646387038:0.0016408563',
  '5832448250:0.0015318693',
  '5646132545:0.0015180756',
  '5640077220:0.0014568567',
  '5512767226:0.0014417378',
  '5640077923:0.0013046304',
  '5646094925:0.001036009',
  '5646131956:0.00088551536',
  '5645751323:0.0008757647',
  '5640107895:0.00083890266',
  '5713911708:0.0008139692',
  '5640677757:0.000574085',
  '5638726815:0.0004992459',
  '5640237338:0.00038364995',
  '5653538912:0.00036407687',
  '8658763994:0.0003627256',
  '8660277244:0.0003627256',
  '5640273421:0.00036022338',
  '5646369028:0.00028871762',
  '5713858601:0.00028563946',
  '5655840265:0.00028178678',
  '5640665901:0.00027429566',
  '5656323968:0.0002720442',
  '29121197706:0.00025337943',
  '6304791701:0.00024271791',
  '5646376288:0.00024271791',
  '5640226935:0.00023743711',
  '6008436173:0.00023287862',
  '11569462863:0.00022515221',
  '29981037631:0.00021632337',
  '5638760001:0.00021192303',
  '5645889945:0.00016491402',
  '6354449991:0.00015578995',
  '5646109735:0.00015087413',
  '5638761511:0.00014489278',
  '5640211580:0.00014281973',
  '5645877857:0.00014125205',
  '5638712888:0.00013787115',
  '5639957934:0.00012625656',
  '5640054645:0.00012301822',
  '6009698144:0.000117827905',
  '5645888755:0.000112571324',
  '5645892046:0.000101484846',
  '5645698327:0.000100443955',
  '5645879999:0.00008878075',
  '5638784323:0.00008490018',
  '5640268282:0.00008201215',
  '5640040780:0.000074509655',
  '5638754824:0.00006579078',
  '5640672855:0.00006512495',
  '5640411493:0.000052800362',
  '7214579957:0.00005181377',
  '5646366267:0.00005125759',
  '36766549172:0.00004738316',
  '36868828142:0.0000432707',
  '5640146836:0.000037143833',
  '46546666307:0.000036952555',
  '5640291327:0.000035557616',
  '5639754290:0.00003347878',
  '5638700703:0.000031292173',
  '25564499955:0.000026783026',
  '24865229667:0.000022542996',
  '5646361267:0.000020591513',
  '5639497680:0.00002044672',
  '5645694853:0.00002015531',
  '5635598410:0.00002008727',
  '5640542535:0.000017702068',
  '5639475128:0.000016721233',
  '5639423851:0.000015840713',
  '5646131124:0.000015161288',
  '5640294663:0.000014361963',
  '5640407216:0.000014086423',
  '26880195405:0.000012556948',
  '5646391663:0.000012555861',
  '29300180081:0.00001238005',
  '5638680733:0.000012197244',
  '5640426865:0.000012002693',
  '5781198615:0.000012002693',
  '5645912437:0.000012002693',
  '5781198615:0.0000120325185',
  '5645913967:0.000011893899',
  '5646131031:0.000011825657',
  '5638760105:0.000011825657',
  '5639504601:0.000011556247',
  '9354031999:0.000011445279',
  '5639439240:0.000011117158',
  '5640035243:0.000010698818',
  '8660786314:0.000010480759',
  '5679443770:0.000010313586',
  '5638783600:0.0000098624205',
  '5639893126:0.000009460526',
  '5639599117:0.00000929489',
  '5639952793:0.000008752026',
  '5638758288:0.000008453503',
  '12197059940:0.0000081752',
  '5638769480:0.000007856796',
  '5638677421:0.000007497289',
  '5640088375:0.0000070953943',
  '5955769464:0.0000069605935',
  '5646391507:0.0000066397633',
  '5711116516:0.0000066397633',
  '7243943791:0.0000061137757',
  '5638756604:0.0000056912254',
  '5671177800:0.0000056912254',
  '5671461820:0.0000056912254',
  '5638710455:0.000005491665',
  '5640265076:0.000005491665',
  '7244708903:0.000005491665',
  '5671190726:0.000005491665',
  '46386661192:0.000005491665',
  '5773065668:0.000005355206',
  '5639491657:0.0000052403793',
  '5640263617:0.000004730263',
  '5640017976:0.000004730263',
  '7244957286:0.000004730263',
  '7244961040:0.000004730263',
  '5639496392:0.000004730263',
  '5646355492:0.000004730263',
  '6703080488:0.000004730263',
  '5653192321:0.000004730263',
  '5653744195:0.000004730263',
  '5669359612:0.000004730263',
  '5711877778:0.000004730263',
  '5714432594:0.000004730263',
  '45216144030:0.000004730263',
  '36763176903:0.000004730263',
  '5639956927:0.000004707141',
  '39375896536:0.0000046754344',
  '25241510404:0.000004460212',
  '5711635292:0.000004054511',
  '29301380510:0.0000037486445',
  '24788515508:0.0000037486445',
  '27058596645:0.0000037486445',
  '5639607506:0.0000037486445',
  '5639653706:0.0000037486445',
  '7244960973:0.0000037486445',
  '5639370766:0.0000037486445',
  '5639456447:0.0000037486445',
  '5639504212:0.0000037486445',
  '5646132780:0.0000037486445',
  '6149376705:0.0000037486445',
  '6150807118:0.0000037486445',
  '6150830744:0.0000037486445',
  '5671799228:0.0000037486445',
  '5711212963:0.0000037486445',
  '5713548422:0.0000037486445',
  '5714475192:0.0000037486445',
  '9725527578:0.0000032131238',
  '5639649762:0.0000032131238',
  '5639719538:0.0000032131238',
  '6150704082:0.0000032131238',
  '5638679123:0.0000023651314',
  '5640238484:0.0000023651314',
  '5640564730:0.0000023651314',
  '5640576232:0.0000023651314',
  '5640669743:0.0000023651314',
  '5645872871:0.0000023651314',
  '5640034817:0.0000023651314',
  '7722272368:0.0000023651314',
  '5639540683:0.0000023651314',
  '5646132327:0.0000023651314',
  '5646391464:0.0000023651314',
  '5646393094:0.0000023651314',
  '6150820249:0.0000023651314',
  '6378031705:0.0000023651314',
  '5653572073:0.0000023651314',
  '5653742721:0.0000023651314',
  '5663424149:0.0000023651314',
  '5701160409:0.0000023651314',
  '5865097767:0.0000023651314',
  '43633824256:0.0000023651314',
  '7244957038:0.0000020272555',
  '5639078322:0.0000020272555',
  '5668902567:0.0000020272555',
  '47088011568:0.0000020272555',
  '19258790499:0.0000016893795',
  '7246113427:0.0000013515036',
  '5638798012:0.0000013515036',
  '5638665049:0.029606828',
  '5640165695:0.02302034',
  '33027667523:0.019369112',
  '5682943044:0.019183613',
  '5639520901:0.018954655',
  '6048517914:0.015741501',
  '5646393125:0.013303111',
  '24262194294:0.012517673',
  '5639795757:0.011002837',
  '6018673136:0.011002837',
  '5639438210:0.009477328',
  '42859937541:0.007897773',
  '5640055475:0.007510605',
  '5639560926:0.004738664',
  '33135127006:0.004738664',
  '5646132285:0.004738664',
  '5640506857:0.003502295',
  '5640282573:0.0034176717',
  '5645713917:0.002069587',
  '5646372166:0.0016915908',
  '5646387038:0.0016197446',
  '5512767226:0.0014608843',
  '5640077220:0.0014381125',
  '5640077923:0.0012847396',
  '5640232247:0.0010282643',
  '5640107895:0.00082810916',
  '5713911708:0.0008247788',
  '5653538912:0.00036354637',
  '8658763994:0.0003580587',
  '8660277244:0.0003580587',
  '5655840265:0.00028137618',
  '5832448250:0.00027409484',
  '5646132545:0.00027162675',
  '5656323968:0.00026854404',
  '5646376288:0.00024236424',
  '6304791701:0.00024236424',
  '5638760001:0.00020668266',
  '29121197706:0.00018671947',
  '5646094925:0.00017522814',
  '5645751323:0.00017369671',
  '5713858601:0.0001717972',
  '5640226935:0.0001656247',
  '5646131956:0.000149774',
  '5638761511:0.00014130991',
  '26880195405:0.0001184587',
  '5640677757:0.0000970994',
  '26960563463:0.00008943882',
  '5645877857:0.00008750811',
  '5638726815:0.00008444128',
  '5645879999:0.000068186644',
  '5645698327:0.00006450116',
  '5640237338:0.0000616627',
  '5640273421:0.000060927337',
  '5640672855:0.00005549349',
  '5640411493:0.00005149473',
  '7214579957:0.000050995055',
  '11569462863:0.00005011154',
  '36868828142:0.00004931373',
  '5638769480:0.000048419257',
  '5640665901:0.000046393725',
  '36766549172:0.000046211484',
  '5646369028:0.000044206397',
  '5640211580:0.000036041067',
  '46546666307:0.0000360388',
  '29981037631:0.000035209054',
  '6008436173:0.00003519249',
  '5640291327:0.000034678353',
  '6354449991:0.0000325832',
  '5638700703:0.00003200957',
  '5645889945:0.00002789317',
  '5638712888:0.000023319206',
  '5646109735:0.000022673916',
  '24865229667:0.000021985557',
  '5646361267:0.00002106359',
  '5640054645:0.000020807012',
  '5645694853:0.000020617388',
  '5639497680:0.000020345822',
  '5645888755:0.00001904005',
  '5640542535:0.000018107901',
  '5645892046:0.00001716491',
  '5639475128:0.00001710458',
  '5640040780:0.000017036316',
  '5639423851:0.000016203874',
  '5640268282:0.000015522042',
  '5646131124:0.000015508873',
  '5640294663:0.0000146912225',
  '5640407216:0.000014409366',
  '6009698144:0.0000138203',
  '5639957934:0.000013001933',
  '5646391663:0.000012843714',
  '5638680733:0.000012476876',
  '29300180081:0.00001231896',
  '5640426865:0.000012277866',
  '5645912437:0.000012277866',
  '5781198615:0.000012277866',
  '5638760105:0.000012066786',
  '5646131031:0.000012066786',
  '5639504601:0.000011791884',
  '5645913967:0.000011626185',
  '28357797232:0.000011446292',
  '5639439240:0.000011157712',
  '5640035243:0.000010737846',
  '8660786314:0.000010518992',
  '5679443770:0.00001035121',
  '5638783600:0.000009898397',
  '5639893126:0.0000094950365',
  '5639599117:0.000009328797',
  '5646366267:0.000008944001',
  '5639952793:0.000008783953',
  '5638758288:0.000008484341',
  '5638677421:0.0000075246385',
  '5638784323:0.0000075246385',
  '5640088375:0.0000071212776',
  '5955769464:0.000007087953',
  '12197059940:0.000006708516',
  '5646391507:0.0000066639845',
  '5711116516:0.0000066639845',
  '7243943791:0.0000061360784',
  '5670360720:0.0000058778',
  '5638754824:0.000005711987',
  '5638756604:0.000005711987',
  '5671177800:0.000005711987',
  '5671461820:0.000005711987',
  '7244708903:0.000005511698',
  '46386661192:0.000005511698',
  '5638710455:0.000005511698',
  '5671190726:0.000005511698',
  '5640265076:0.000005511698',
  '5773065668:0.0000053747417',
  '5639491657:0.000005259496',
  '7244957286:0.0000047475182',
  '7244961040:0.0000047475182',
  '5640017976:0.0000047475182',
  '6703080488:0.0000047475182',
  '5714432594:0.0000047475182',
  '45216144030:0.0000047475182',
  '5639496392:0.0000047475182',
  '5646355492:0.0000047475182',
  '5653192321:0.0000047475182',
  '5653744195:0.0000047475182',
  '5669359612:0.0000047475182',
  '5711877778:0.0000047475182',
  '5640263617:0.0000047475182',
  '36763176903:0.0000047475182',
  '5639956927:0.000004724313',
  '39375896536:0.00000469249',
  '25241510404:0.00000440835',
  '5711635292:0.0000040693017',
  '7244960973:0.0000037623192',
  '6150830744:0.0000037623192',
  '6149376705:0.0000037623192',
  '6150807118:0.0000037623192',
  '5714475192:0.0000037623192',
  '5639456447:0.0000037623192',
  '5639504212:0.0000037623192',
  '5639607506:0.0000037623192',
  '5639653706:0.0000037623192',
  '5639370766:0.0000037623192',
  '5646132780:0.0000037623192',
  '5671799228:0.0000037623192',
  '5711212963:0.0000037623192',
  '5713548422:0.0000037623192',
  '29301380510:0.0000037623192',
  '27058596645:0.0000037623192',
  '24788515508:0.0000037623192',
  '5640146836:0.0000032248452',
  '6150704082:0.0000032248452',
  '9725527578:0.0000032248452',
  '5639649762:0.0000032248452',
  '5639719538:0.0000032248452',
  '7722272368:0.0000023737591',
  '5640564730:0.0000023737591',
  '5640576232:0.0000023737591',
  '5640669743:0.0000023737591',
  '5645872871:0.0000023737591',
  '5640034817:0.0000023737591',
  '6150820249:0.0000023737591',
  '6378031705:0.0000023737591',
  '43633824256:0.0000023737591',
  '5865097767:0.0000023737591',
  '5646132327:0.0000023737591',
  '5639540683:0.0000023737591',
  '5639754290:0.0000023737591',
  '5638679123:0.0000023737591',
  '5646391464:0.0000023737591',
  '5646393094:0.0000023737591',
  '5653572073:0.0000023737591',
  '5653742721:0.0000023737591',
  '5663424149:0.0000023737591',
  '5701160409:0.0000023737591',
  '5640238484:0.0000023737591',
  '25564499955:0.0000023737591',
  '7244957038:0.0000020346508',
  '9354031999:0.0000020346508',
  '47088011568:0.0000020346508',
  '5639078322:0.0000020346508',
  '5668902567:0.0000020346508',
  '5635598410:0.0000020346508',
  '19258790499:0.0000016955422',
  '7246113427:0.0000013564338',
  '5638798012:0.0000013564328',
  '5640165695:0.083207324',
  '33027667523:0.07000992',
  '5682943044:0.06933944',
  '5646393125:0.048084278',
  '24262194294:0.045245305',
  '5640055475:0.027147181',
  '33135127006:0.017127965',
  '5646132285:0.017127965',
  '5640282573:0.009496292',
  '6048517914:0.009117339',
  '5646372166:0.0061345757',
  '6018673136:0.0047795596',
  '5640232247:0.0035960192',
  '5832448250:0.0009585572',
  '5646132545:0.00094992586',
  '5646094925:0.0006477401',
  '29121197706:0.00061550294',
  '5646131956:0.0005536475',
  '5713858601:0.0005078857',
  '5645751323:0.00049735233',
  '5640226935:0.0004971727',
  '5640077220:0.00049427117',
  '36868828142:0.00036341386',
  '5640677757:0.00035893306',
  '5638726815:0.00031214167',
  '5640107895:0.0003000121',
  '5645877857:0.00028054073',
  '5640237338:0.0002462027',
  '5639957934:0.00024171842',
  '26880195405:0.00023748825',
  '5640273421:0.00022522113',
  '5646369028:0.00018959613',
  '5645879999:0.0001875086',
  '5645698327:0.0001867944',
  '26960563463:0.00017930867',
  '5640665901:0.00017149685',
  '5640672855:0.00016713676',
  '5638784323:0.00016254155',
  '5638665049:0.00016018483',
  '29981037631:0.00015714363',
  '6008436173:0.00015521304',
  '5638754824:0.00012595656',
  '11569462863:0.000117156036',
  '5645889945:0.00010310858',
  '5646109735:0.00009991451',
  '5640211580:0.00008929465',
  '5638712888:0.00008620067',
  '6009698144:0.00008620067',
  '6354449991:0.00008516784',
  '5640054645:0.00007691422',
  '5639795757:0.000075353564',
  '5640146836:0.00007111193',
  '5645888755:0.00007038255',
  '5639754290:0.00006409519',
  '5645892046:0.00006345099',
  '12197059940:0.00005909177',
  '25564499955:0.00005127615',
  '5640268282:0.00005127615',
  '5640040780:0.000043899294',
  '5646376288:0.000043270684',
  '5635598410:0.00003845711',
  '5638769480:0.000032463293',
  '5646366267:0.000032047596',
  '28357797232:0.000022947746',
  '9354031999:0.000022433316',
  '5670360720:0.000007693714',
  '5640165695:0.089084424',
  '33027667523:0.07495486',
  '5682943044:0.07423702',
  '5646393125:0.051480565',
  '24262194294:0.048441067',
  '5640055475:0.029064642',
  '33135127006:0.018337747',
  '5646132285:0.018337747',
  '6048517914:0.009761315',
  '5646372166:0.006567872',
  '6018673136:0.0051171496',
  '5640232247:0.0038500128',
  '5640282573:0.0033173796',
  '5832448250:0.001026262',
  '5646132545:0.001017021',
  '5646094925:0.0006934912',
  '5646131956:0.00059275265',
  '5645751323:0.00053248124',
  '5640077220:0.0005291825',
  '5638665049:0.0004989132',
  '6008436173:0.00048342804',
  '5640677757:0.00038428517',
  '5638726815:0.0003341888',
  '5640107895:0.0003212025',
  '5640237338:0.00026359246',
  '5639957934:0.00025879144',
  '6009698144:0.00024390682',
  '5640273421:0.00024112892',
  '5646369028:0.00020298766',
  '29121197706:0.00019507659',
  '5713858601:0.0001912034',
  '5640665901:0.00018361001',
  '5638784323:0.00017402216',
  '29981037631:0.000168243',
  '5640226935:0.00016668304',
  '5638754824:0.00013485311',
  '11569462863:0.00012543099',
  '5645889945:0.00011039133',
  '5646109735:0.000106971645',
  '5645877857:0.00010097952',
  '5640211580:0.0000956017',
  '5638712888:0.00009228919',
  '6354449991:0.00009118341',
  '36868828142:0.0000886931',
  '5640054645:0.00008234682',
  '5640146836:0.0000761347',
  '5645888755:0.00007535381',
  '5639754290:0.00006862235',
  '5645892046:0.00006793267',
  '5645698327:0.0000672359',
  '5645879999:0.000059428698',
  '25564499955:0.000054897882',
  '5640268282:0.000054897882',
  '5640672855:0.00004852333',
  '5640040780:0.000046999983',
  '5639497680:0.000043670756',
  '5639795757:0.000043457294',
  '5635598410:0.00004117341',
  '5646366267:0.000034311175',
  '29300180081:0.000026441707',
  '5645913967:0.000024954717',
  '7214579957:0.000024954717',
  '9354031999:0.000024017823',
  '12197059940:0.000017155588',
  '5512767226:0.000016627833',
  '5656323968:0.000015596699',
  '5670360720:0.000012477359',
  '25241510404:0.000009358019',
  '5638665049:0.06565877',
  '5640165695:0.051051978',
  '33027667523:0.042954687',
  '5682943044:0.042543314',
  '5639520901:0.04203555',
  '6048517914:0.03490977',
  '5646393125:0.029502178',
  '24262194294:0.027760321',
  '5639795757:0.024400882',
  '6018673136:0.024400882',
  '5639438210:0.021017775',
  '42859937541:0.017514812',
  '5640055475:0.016656194',
  '5639560926:0.0105088875',
  '5646132285:0.0105088875',
  '33135127006:0.0105088875',
  '5640506857:0.00778009',
  '5640282573:0.0073768343',
  '5645713917:0.004558964',
  '5646372166:0.003757744',
  '5646387038:0.0036040319',
  '5512767226:0.0032452466',
  '5640077220:0.0031998896',
  '5640077923:0.0028494264',
  '5640232247:0.0022651',
  '5640107895:0.0018425942',
  '5713911708:0.0018321852',
  '5653538912:0.0008008337',
  '8658763994:0.0007967028',
  '8660277244:0.0007967028',
  '5655840265:0.0006198261',
  '5832448250:0.00060378644',
  '5646132545:0.0005983497',
  '5656323968:0.0005975271',
  '5646376288:0.00053388916',
  '6304791701:0.00053388916',
  '5638760001:0.00046718123',
  '29121197706:0.00041508168',
  '5646094925:0.0003960821',
  '5645751323:0.0003926205',
  '5713858601:0.00038414032',
  '5640226935:0.0003692133',
  '5646131956:0.0003385461',
  '5638761511:0.00031941402',
  '26880195405:0.00026116427',
  '5640677757:0.00021948149',
  '26960563463:0.00019718453',
  '5645877857:0.00019524842',
  '5638726815:0.00019086934',
  '5645879999:0.00015200277',
  '5645698327:0.00014409714',
  '5640237338:0.00013938108',
  '5640273421:0.0001377189',
  '5640672855:0.00012331139',
  '5640411493:0.000116397634',
  '11569462863:0.000113271104',
  '5638769480:0.000109544926',
  '36868828142:0.000108721295',
  '5640665901:0.00010486743',
  '36766549172:0.00010445549',
  '5646369028:0.00009992325',
  '46546666307:0.00008146137',
  '5640211580:0.00008100652',
  '5640291327:0.00007838624',
  '29981037631:0.00007698579',
  '6354449991:0.00007365039',
  '5638700703:0.00006999001',
  '5645889945:0.00006304915',
  '5638712888:0.000052710253',
  '5646109735:0.00005125166',
  '24865229667:0.000049695704',
  '5640054645:0.000047031746',
  '5646361267:0.000046056255',
  '5645694853:0.00004508062',
  '5645888755:0.00004303774',
  '5640542535:0.000039593546',
  '5645892046:0.00003879921',
  '5639475128:0.000037399743',
  '5640040780:0.000037250484',
  '5639423851:0.00003543032',
  '5640268282:0.000034887606',
  '5646131124:0.000033910677',
  '5640294663:0.000032122858',
  '5640407216:0.000031506566',
  '7214579957:0.0000313545',
  '5639957934:0.000028429167',
  '5646391663:0.000028083216',
  '5638680733:0.000027281112',
  '5640426865:0.00002684597',
  '5645912437:0.00002684597',
  '5781198615:0.00002684597',
  '5646131031:0.000026384438',
  '5638760105:0.000026384438',
  '5639504601:0.000025783354',
  '28357797232:0.000025235482',
  '5639439240:0.000024803692',
  '5640035243:0.000023870327',
  '8660786314:0.000023383811',
  '5679443770:0.00002301083',
  '5638783600:0.000022004226',
  '5639893126:0.000021157344',
  '5639599117:0.000020786922',
  '5646366267:0.000019929494',
  '5639952793:0.000019572868',
  '5638758288:0.000018905259',
  '6008436173:0.000018298097',
  '29300180081:0.000017934444',
  '5638677421:0.000016766799',
  '5638784323:0.000016766799',
  '5640088375:0.000015868009',
  '5955769464:0.00001579375',
  '12197059940:0.000014948275',
  '5646391507:0.0000148490435',
  '5711116516:0.0000148490435',
  '7243943791:0.000013672735',
  '5638754824:0.000012727752',
  '5638756604:0.000012727752',
  '5671177800:0.000012727752',
  '5671461820:0.000012727752',
  '7244708903:0.000012281458',
  '46386661192:0.000012281458',
  '5638710455:0.000012281458',
  '5671190726:0.000012281458',
  '5640265076:0.000012281458',
  '5773065668:0.000011976285',
  '5639491657:0.000011719488',
  '7244957286:0.000010578672',
  '7244961040:0.000010578672',
  '5640017976:0.000010578672',
  '6703080488:0.000010578672',
  '5714432594:0.000010578672',
  '45216144030:0.000010578672',
  '5639496392:0.000010578672',
  '5646355492:0.000010578672',
  '5653192321:0.000010578672',
  '5653744195:0.000010578672',
  '5669359612:0.000010578672',
  '5711877778:0.000010578672',
  '5640263617:0.000010578672',
  '36763176903:0.000010578672',
  '5639956927:0.000010526965',
  '39375896536:0.000010456056',
  '5711635292:0.000009067434',
  '7244960973:0.000008383399',
  '6150830744:0.000008383399',
  '6149376705:0.000008383399',
  '6150807118:0.000008383399',
  '5714475192:0.000008383399',
  '5639456447:0.000008383399',
  '5639504212:0.000008383399',
  '5639607506:0.000008383399',
  '5639653706:0.000008383399',
  '5639370766:0.000008383399',
  '5646132780:0.000008383399',
  '5671799228:0.000008383399',
  '5711212963:0.000008383399',
  '5713548422:0.000008383399',
  '29301380510:0.000008383399',
  '27058596645:0.000008383399',
  '24788515508:0.000008383399',
  '5640146836:0.000007185771',
  '6009698144:0.000007185771',
  '6150704082:0.000007185771',
  '9725527578:0.000007185771',
  '5639649762:0.000007185771',
  '5639719538:0.000007185771',
  '5670360720:0.0000053430363',
  '7722272368:0.000005289336',
  '5640564730:0.000005289336',
  '5640576232:0.000005289336',
  '5640669743:0.000005289336',
  '5645872871:0.000005289336',
  '5640034817:0.000005289336',
  '6150820249:0.000005289336',
  '6378031705:0.000005289336',
  '43633824256:0.000005289336',
  '5865097767:0.000005289336',
  '5645913967:0.000005289336',
  '5646132327:0.000005289336',
  '5639497680:0.000005289336',
  '5639540683:0.000005289336',
  '5639754290:0.000005289336',
  '5638679123:0.000005289336',
  '5646391464:0.000005289336',
  '5646393094:0.000005289336',
  '5653572073:0.000005289336',
  '5653742721:0.000005289336',
  '5663424149:0.000005289336',
  '5701160409:0.000005289336',
  '5640238484:0.000005289336',
  '25564499955:0.000005289336',
  '7244957038:0.000004533717',
  '9354031999:0.000004533717',
  '47088011568:0.000004533717',
  '5639078322:0.000004533717',
  '5668902567:0.000004533717',
  '5635598410:0.000004533717',
  '19258790499:0.0000037780974',
  '7246113427:0.0000030224778',
  '5638798012:0.0000030224778',
]

const queryOptions = {
  endpoint: '/contentsearch/v2/search',
  terms: [
    'debit+Card+Limits',
    'Debit+Spend+Limits',
    'Debit+Card+Spend',
    'Card+Spend+Limits',
    'Debit+Limits',
    'Debit+Spend',
    'Card+Limits',
    
  ],
  types: [
    'SITE_PAGE',
    'LANDING_PAGE'
  ],
  portalId: 1765103,
  baseUrl: HS_BASE_URL,
  limit: 100,
  offset: 0,
  property: 'html'
}




const refreshTokenStore = {}
const accessTokenCache = new NodeCache({ deleteOnExpire: true })
if (!CLIENT_ID || !CLIENT_SECRET) {
  throw new Error('Missing CLIENT_ID or CLIENT_SECRET environment variables')
}
let SCOPES = ['content']
if(SCOPE) {
  SCOPES = (SCOPE.split(/ |, ?|%20/)).join(' ')
  console.log('scopes:::')
  console.log(SCOPES)
}

const REDIRECT_URI = `${LOCAL_URL}:${PORT}/${AUTH_CALLBACK}`
console.log(`REDIRECT URI: ==> ${REDIRECT_URI}`)
// session set up
app.use(session({
  secret: Math.random().toString(36).substring(2),
  resave: false,
  saveUninitialized: true
}))


// step 1 - auth url for redirect on app install
// https://app.hubspot.com/oauth/authorize
// ?client_id=4158cdb1-8e45-4c37-a5de-3f75a687a31c
// &redirect_uri=http://localhost:8080/oauth-callback
// &scope=contacts

const authUrl = 
  `https://app.hubspot.com/oauth/authorize` + 
  `?client_id=${encodeURIComponent(CLIENT_ID)}` + // app client id
  `&redirect_uri=${encodeURIComponent(REDIRECT_URI)}` + // callback after approval
  `&scope=${encodeURIComponent(SCOPES)}`// scopes being requested
  
console.log(`=====> authUrl: ${authUrl}`)
app.get('/install', (req, res) => {
  console.log('')
  console.log('=== Initiating OAuth 2.0 flow with HubSpot ===')
  console.log('')
  console.log("===> Step 1: Redirecting user to your app's OAuth URL")
  res.redirect(authUrl)
  console.log('===> Step 2: User is being prompted for consent by HubSpot')
})

// user is presented with UI to sign in / authenticate their user

// get auth code from server and process response

app.get(`/${AUTH_CALLBACK}`, async (req, res) => {
  console.log('===> Step 3: Handling the request sent by the server')

  if (req.query.code) {
    console.log('       > Received an authorization token')
    const authCodeProof = {
      grant_type: 'authorization_code',
      client_id: CLIENT_ID,
      client_secret: CLIENT_SECRET,
      redirect_uri: REDIRECT_URI,
      code: req.query.code
    }

    // get access and refresh token
    console.log('===> Step 4: Exchanging authorization code for an access token and refresh token')
    const token = await exchangeForTokens(req.sessionID, authCodeProof)
    if (token.message) {
      return res.redirect(`/error?msg=${token.message}`)
    }

    // after response redirect to main route
    res.redirect('/')

  }
})

const exchangeForTokens = async (userId, exchangeProof) => {
  try {
    const responseBody = await request.post('https://api.hubapi.com/oauth/v1/token', {
      form: exchangeProof
    });
    // Usually, this token data should be persisted in a database and associated with
    // a user identity.
    const tokens = JSON.parse(responseBody);
    refreshTokenStore[userId] = tokens.refresh_token;
    accessTokenCache.set(userId, tokens.access_token, Math.round(tokens.expires_in * 0.75));

    console.log('       > Received an access token and refresh token');
    return tokens.access_token;
  } catch (e) {
    console.error(`       > Error exchanging ${exchangeProof.grant_type} for access token`);
    return JSON.parse(e.response.body);
  }
};


const refreshAccessToken = async (userId) => {
  const refreshTokenProof = {
    grant_type: 'refresh_token',
    client_id: CLIENT_ID,
    client_secret: CLIENT_SECRET,
    redirect_uri: REDIRECT_URI,
    refresh_token: refreshTokenStore[userId]
  }
  return await exchangeForTokens(userId, refreshTokenProof)
}

const getAccessToken = async (userId) => {
  // if expired, renew
  if (!accessTokenCache.get(userId)) {
    console.log('Refreshing expired access token')
    await refreshAccessToken(userId)
  }
  return accessTokenCache.get(userId)
}

const isAuthorized = (userId) => {
  return refreshTokenStore[userId] ? true : false
}

function buildContentSearchQuery(queryOptions, termId) {
  let query = `${queryOptions.baseUrl}${queryOptions.endpoint}?portalId=${queryOptions.portalId}`
  const typeQuery = queryOptions['types'].join('&type=')
  query += `&type=${typeQuery}`
  query += `&term=\"${queryOptions.terms[termId]}\"`
  if(queryOptions.offset) {
    query += `&offset=${queryOptions.offset}`
  } else {
    query += `&offset=0`
  }
  if(queryOptions.limit) {
    query += `&limit=${queryOptions.limit}`
  } else {
    query += `&offset=100`
  }
  return query
}


const getSearchResults = async (accessToken, queryOptions) => {
  const headers = {
    Authorization: `Bearer ${accessToken}`,
    'Content-Type': 'application/json'
  }

  const allResults = []
  // for(let i = 0; i < 2; i++) {
  for(let i = 0; i < queryOptions.terms.length; i++) {
    let termId = i
    queryOptions.completed = 0
    queryOptions.total = 0
    queryOptions.offset = 0
    do {
        
      try {
        let apiQuery = buildContentSearchQuery(queryOptions, termId)
        console.log('apiurl:', apiQuery)

        const result = await request.get(apiQuery, {
          headers: headers
        });
        const results = JSON.parse(result)
        
        allResults.push(results.results)
        
        queryOptions.offset = queryOptions.limit + queryOptions.offset
        queryOptions.completed = queryOptions.offset
        queryOptions.total = results.total
        console.log('one down: ', queryOptions)
        

      } catch (e) {
        console.error(e)
        console.error('  > Unable to retrieve search')
        return JSON.parse(e)
      }
    } while (queryOptions.total > queryOptions.completed)
  }
  

  return allResults

}

const getPageResults = async (accessToken, pageIds) => {
  const file = 'results.csv'
  var logger = fs.createWriteStream(file, {
    flags: 'a' // 'a' means appending (old data will be preserved)
  })
  console.log('first result:', results[0])
  // for output
  // const lineItem = `${index},${score},${title},${url}\r\n`
  

  const headers = {
    Authorization: `Bearer ${accessToken}`,
    'Content-Type': 'application/json'
  }

  const allResults = []
  // for(let i = 0; i < 2; i++) {
  // const length = pageIds.length
  const length = 10
  const start = 0
  if(start == 0) logger.write(`ID,Score,URL,Title\r\n`)
  for(let i = start; i < length; i++) {
    const pageId = pageIds[i].split(':')[0]
    let score = Number(pageIds[i].split(':')[1])
    try {
      const pageQuery = `${HS_BASE_URL}/content/api/v2/pages/${pageId}`
      // console.log('pageQuery:', pageQuery)
      const result = await request.get(pageQuery, {
        headers: headers
      });
      
      const apiResult = JSON.parse(result)
      const widgets = apiResult.widgets
      
      if(widgets) {
        Object.keys(widgets)
          .forEach(widget => {
            let content = false
            const body = widgets[widget].body
            if(body && body.html) {
              content = striptags(body.html)
            } else if (body && body['compare_overlay']) {
              content = striptags(body['compare_overlay'])
            } else {
              // console.log('body:')
              // console.log(body)
            }
            if(content) {
              queryOptions.terms.forEach(term => {
                if(scoreThis(content, term) === true) {
                  // console.log('current score = ', score)
                  // console.log('we have a match')
                  score = score + 1
                  // console.log('score:', score)
                } 
              })
              // console.log('finalScore::', score)
            }
            
          }) 
      }
      const lineItem = `${i},${score},${apiResult['published_url']},${apiResult['html_title']}\r\n`
      console.log(lineItem)
      // for ids
      // const lineItem = `'${result.id}:${result.score}',\r\n`
      // data.push(lineItem)
      logger.write(lineItem)
      // const resultToPush = { id: pageId, score: score, url: , title:  }
      // allResults.push(resultToPush)
      
    } catch (e) {
      console.error(e)
      console.error('  > Unable to retrieve search')
      return e
    }
  } 
  logger.end()
  // console.log('allResults Length:', allResults.length)
  return `Start record ${start}, to record ${length}`
}

function scoreThis(content, term) {
  
  content = content.toLowerCase()
  let searchTerm = term
  if(searchTerm.indexOf('+')) {
    searchTerm = searchTerm.replace(/\+/g, ' ')
  }
  searchTerm = searchTerm.toLowerCase()

  if(content.indexOf(searchTerm) > -1) {
    return true
  }
  return false
}


const displayObjectResult = async (res, results, accessToken) => {
  if(results.status === 'error') {
    res.write(`<h3>WILL NOT WORK. MESSAGE IN A BOTTLE: ${results.message}</h3>`)
    return
  }
  res.write('<h2>Here are the results</h2>')
  const file = 'results.csv'
  var logger = fs.createWriteStream(file, {
    flags: 'a' // 'a' means appending (old data will be preserved)
  })
  // console.log('first result:', results[0])
  // for output
  // const lineItem = `${index},${score},${title},${url}\r\n`
  logger.write(`ID,Score,URL,Title\r\n`)
  // for ids
  // logger.write(`[\r\n`)
  const resultsAsCsv = await getCSVFromContentItems(results, logger)

  res.write(resultsAsCsv)
}


// const queryOptions = {
//   endpoint: '/contentsearch/v2/search',
//   terms: [
//     'debit+Card+Limits',
//     'Debit+Spend+Limits',
//     'Debit+Card+Spend',
//     'Card+Spend+Limits',
//     'Debit+Limits',
//     'Debit+Spend',
//     'Card+Limits'
//   ],
//   types: [
//     'SITE_PAGE',
//     'LANDING_PAGE'
//   ],
//   portalId: 1765103,
//   baseUrl: HS_BASE_URL,
//   limit: 100,
//   offset: 0,
//   property: 'html'
// }


// const getAdvancedScore = (contentSearchResult, accessToken) => {
//   const headers = {
//     Authorization: `Bearer ${accessToken}`,
//     'Content-Type': 'application/json'
//   }
//   const pageQuery = queryOptions
//   try {
//     let apiQuery = `${pageQuery.baseUrl}/content/api/v2/pages/${contentSearchResult.id}`
//     console.log('apiurl:', apiQuery)

//     const result = await request.get(apiQuery, {
//       headers: headers
//     });
//     const results = JSON.parse(result)
//     console.log('result form individial query')
//     console.log(results)
//     return results.id

//   } catch (e) {
//     console.error(e)
//     console.error('  > Unable to retrieve search')
//     return JSON.parse(e)
//   }
// }

const getCSVFromContentItems = async (results, logger) => {
  const data = []
  
  console.log('results length in getcsv stuff', results.length)

  results.forEach((result, index) => {
    console.log('index:', index)
    if(index < 3) console.log(result)
    const url = result.url
    const title = striptags(result.title)
    // const score = getAdvancedScore(result, accessToken)
    const score = result.score
    // for normal
    const lineItem = `${index},${score},${url},${title}\r\n`
    console.log(lineItem)
    // for ids
    // const lineItem = `'${result.id}:${result.score}',\r\n`
    data.push(lineItem)
    logger.write(lineItem)
    
  })
  logger.end()
  return JSON.stringify(data)
  
}

app.get('/', async (req, res) => {
  res.setHeader('Content-Type', 'text/html')
  res.write(`<h2>page id stuff that needs to work corerctly</h2>`)
  if (isAuthorized(req.sessionID)) {
    const accessToken = await getAccessToken(req.sessionID)
    
    const searchResults = await getPageResults(accessToken, pageIds);
    res.write(`<h4>Completed search results, writing now</h4>`)
    // res.write(`<h4>Access token: ${accessToken}</h4>`)

    // const whatever = await displayObjectResult(res, searchResults)

  } else {
    res.write(`<a href="/install">Install the app to make this work right</a>`)
  }
  res.end()
})


// app.get('/', async (req, res) => {
//   res.setHeader('Content-Type', 'text/html')
//   res.write(`<h2>chickens don't get a chance to gobble if they are always clucking up</h2>`)
//   if (isAuthorized(req.sessionID)) {
//     const accessToken = await getAccessToken(req.sessionID)
    
//     const searchResults = await getSearchResults(accessToken, queryOptions);

//     res.write(`<h4>Access token: ${accessToken}</h4>`)
//     const whatever = await displayObjectResult(res, searchResults, accessToken)

//   } else {
//     res.write(`<a href="/install">Install the app to make this work right</a>`)
//   }
//   res.end()
// })

app.get('/error', (req, res) => {
  res.setHeader('Content-Type', 'text/html')
  res.write(`<h1 style="color: red;">RED ALERT</h1><h4>Error: ${req.query.msg}</h4>`)
  res.end()
})

app.listen(PORT, () => console.log(`=== Starting your app on ${LOCAL_URL}:${PORT} ===`))
opn(`${LOCAL_URL}:${PORT}`)
